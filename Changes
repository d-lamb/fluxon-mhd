20-July-2006: [cd]
	- added dup-avoiding unfiltered dumblist addition in model.c.  Now it
	  does seem to both be correct and run much faster. (about 2x)
19-July-2006: [cd]
	- Added unsorted-points hull routine (should be much faster)
12-July-2006: [lr & cd]
	- installed e_simple (test)
	- added energy method to World.pm
19-June-2006: [cd] 
	- fixed order-of-deref bug between tied hash and underlying
	blessed scalar.  No longer dumps core on exit.  (Bonus!)
14-June-2006: [cd]
	- Replaced explicit form-and-bless calls in many of the Vertex.xs 
	routines, with correct perl calls to the perl-side constructor. This
	eliminates a reference leak that was causing crashes.  Still get a
	segmentation fault on exit...
13-June-2006: [CD]
	- De-allocation is now in place.  Routine "free_world" seems to clean
up the whole data structure OK.  World freedom is linked into the perl side 
too, with a perl-like ref count mechanism -- when you deallocate all remaining 
references to a Flux object, it gets cleaned up.  There are still some problems
with global cleanup -- tends to dump core rather than exiting perl gracefully.
But everything seems to work OK in normal use.  No memory leaks observed 
when loading and displaying thousands of worlds.

2-June-2006: [LR]
	-added a lower threshold to fix_curvature. changed num returned to the difference between new and prev vertex total

31-May-2006:
	- Added rudimentary version information -- in $FLUX::file_versions.  It tells you the location, mod date, and size of each source file in the FLUX library.
	- clamped output step to minimum neighbor distance.
29-May-2006:
	- Clamped output step -- no vertex can move more than the distance to its nearest neighbor on the same fluxon.  This is to avoid some of the weirder anomalies from ds step scaling, but probably needs to use *all* neighbors rather than just fluxon buddies.
23-May-2006: 
	- Added a new force law -- f_pressure_equi2 -- that allows correct calculation without resorting to the kludge of running f_pressure_equi twice.
	- Fixed vertex deallocation (was a bug in dumblist_delete).
	- lots of updates in early 2006 - notably a tied-hash front end for
	  parameters on the perl side.  Painful but worth it.


21-Oct-2005: v. 1.1 updates:
	- Changes to the way that step scaling is controlled.  You can now set the
		power to which various parameters are raised to find the scaling factor
		at each node.
	- Perl interface has been updated: the principal structures all exist as tied hashes.
	  You can read (but not write) dumblists as perl lists.  All scalar and vector	
	  quantities are r/w.  For example,
		$a = read_world('pdl/menagerie/potential.flux');
		print $a->fluxon(200)->vertex(2)->{x};
			[-0.936 0.02 0.289]

	  

18-Aug-2004: checked-in to CVS.

